// Code generated by "enumer -type=lineItemFields"; DO NOT EDIT.

//
package queries

import (
	"fmt"
)

const _lineItemFieldsName = "L_ORDERKEYL_PARTKEYL_SUPPKEYL_LINENUMBERL_QUANTITYL_EXTENDEDPRICEL_DISCOUNTL_TAXL_RETURNFLAGL_LINESTATUSL_SHIPDATEL_COMMITDATEL_RECEIPTDATEL_SHIPINSTRUCTL_SHIPMODEL_COMMENT"

var _lineItemFieldsIndex = [...]uint8{0, 10, 19, 28, 40, 50, 65, 75, 80, 92, 104, 114, 126, 139, 153, 163, 172}

func (i lineItemFields) String() string {
	if i < 0 || i >= lineItemFields(len(_lineItemFieldsIndex)-1) {
		return fmt.Sprintf("lineItemFields(%d)", i)
	}
	return _lineItemFieldsName[_lineItemFieldsIndex[i]:_lineItemFieldsIndex[i+1]]
}

var _lineItemFieldsValues = []lineItemFields{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}

var _lineItemFieldsNameToValueMap = map[string]lineItemFields{
	_lineItemFieldsName[0:10]:    0,
	_lineItemFieldsName[10:19]:   1,
	_lineItemFieldsName[19:28]:   2,
	_lineItemFieldsName[28:40]:   3,
	_lineItemFieldsName[40:50]:   4,
	_lineItemFieldsName[50:65]:   5,
	_lineItemFieldsName[65:75]:   6,
	_lineItemFieldsName[75:80]:   7,
	_lineItemFieldsName[80:92]:   8,
	_lineItemFieldsName[92:104]:  9,
	_lineItemFieldsName[104:114]: 10,
	_lineItemFieldsName[114:126]: 11,
	_lineItemFieldsName[126:139]: 12,
	_lineItemFieldsName[139:153]: 13,
	_lineItemFieldsName[153:163]: 14,
	_lineItemFieldsName[163:172]: 15,
}

// lineItemFieldsString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func lineItemFieldsString(s string) (lineItemFields, error) {
	if val, ok := _lineItemFieldsNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to lineItemFields values", s)
}

// lineItemFieldsValues returns all values of the enum
func lineItemFieldsValues() []lineItemFields {
	return _lineItemFieldsValues
}

// IsAlineItemFields returns "true" if the value is listed in the enum definition. "false" otherwise
func (i lineItemFields) IsAlineItemFields() bool {
	for _, v := range _lineItemFieldsValues {
		if i == v {
			return true
		}
	}
	return false
}
